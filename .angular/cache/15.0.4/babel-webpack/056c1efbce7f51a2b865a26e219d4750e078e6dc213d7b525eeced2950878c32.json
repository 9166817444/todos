{"ast":null,"code":"import { createFeatureSelector, createReducer, createSelector, on } from \"@ngrx/store\";\nimport { actions } from \"./todos.actions\";\nimport { todos } from \"./todos.states\";\nexport const todoReducer = createReducer(todos, on(actions.addTodoAction, (state, todo) => {\n  return [...state, todo];\n}), on(actions.updateTodoAction, (state, todo) => {\n  let tempTodoIndex = state.findIndex(t => t.id == todo.id);\n  if (tempTodoIndex != -1) {\n    state[tempTodoIndex] = todo;\n  }\n  return [...state];\n}), on(actions.deleteTodoAction, (state, todo) => {\n  let todos = state.filter(t => t.id != todo.id);\n  return [...todos];\n}));\nexport const todoSelector = createSelector(createFeatureSelector(\"todos\"), state => state);","map":{"version":3,"mappings":"AAAA,SAASA,qBAAqB,EAAEC,aAAa,EAAEC,cAAc,EAAEC,EAAE,QAAQ,aAAa;AACtF,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAAsBC,KAAK,QAAQ,gBAAgB;AAElD,OAAO,MAAMC,WAAW,GAAGL,aAAa,CACrCI,KAAK,EACLF,EAAE,CAACC,OAAO,CAACG,aAAa,EAAE,CAACC,KAAK,EAACC,IAAI,KAAI;EACrC,OAAO,CAAC,GAAGD,KAAK,EAAGC,IAAI,CAAC;AAC5B,CAAC,CAAC,EACFN,EAAE,CAACC,OAAO,CAACM,gBAAgB,EAAE,CAACF,KAAK,EAACC,IAAI,KAAI;EACxC,IAAIE,aAAa,GAAGH,KAAK,CAACI,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,IAAIL,IAAI,CAACK,EAAE,CAAC;EAC3D,IAAGH,aAAa,IAAI,CAAC,CAAC,EAAE;IACpBH,KAAK,CAACG,aAAa,CAAC,GAAGF,IAAI;;EAE/B,OAAO,CAAC,GAAGD,KAAK,CAAC;AACrB,CAAC,CAAC,EACFL,EAAE,CAACC,OAAO,CAACW,gBAAgB,EAAE,CAACP,KAAK,EAACC,IAAI,KAAI;EACxC,IAAIJ,KAAK,GAAGG,KAAK,CAACQ,MAAM,CAAEH,CAAC,IAAKA,CAAC,CAACC,EAAE,IAAIL,IAAI,CAACK,EAAE,CAAC;EAChD,OAAO,CAAC,GAAGT,KAAK,CAAC;AACrB,CAAC,CAAC,CAGJ;AAED,OAAO,MAAMY,YAAY,GAAGf,cAAc,CAACF,qBAAqB,CAAC,OAAO,CAAC,EACxEQ,KAAoB,IAAKA,KAAK,CAC9B","names":["createFeatureSelector","createReducer","createSelector","on","actions","todos","todoReducer","addTodoAction","state","todo","updateTodoAction","tempTodoIndex","findIndex","t","id","deleteTodoAction","filter","todoSelector"],"sourceRoot":"","sources":["/home/hm/projects/Todos/src/app/Providers/todos.reducers.ts"],"sourcesContent":["import { createFeatureSelector, createReducer, createSelector, on } from \"@ngrx/store\";\nimport { actions } from \"./todos.actions\";\nimport { TodoModel_I, todos } from \"./todos.states\";\n\n export const todoReducer = createReducer(\n    todos,\n    on(actions.addTodoAction, (state,todo) => {\n        return [...state , todo]\n    }),\n    on(actions.updateTodoAction, (state,todo) => {\n        let tempTodoIndex = state.findIndex((t) => t.id == todo.id);\n        if(tempTodoIndex != -1) {\n            state[tempTodoIndex] = todo;\n        }\n        return [...state];\n    }),\n    on(actions.deleteTodoAction, (state,todo) => {\n        let todos = state.filter((t) => t.id != todo.id);\n        return [...todos]\n    })\n\n\n )   \n\n export const todoSelector = createSelector(createFeatureSelector(\"todos\"),\n (state: TodoModel_I[]) => state\n )"]},"metadata":{},"sourceType":"module","externalDependencies":[]}